apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
data:
  startup.sh: |
    #!/bin/sh
    cp /tmp/redis/redis.conf /etc/redis/redis.conf
    
    echo "masterauth $REDIS_PASSWORD
    requirepass $REDIS_PASSWORD" >> /etc/redis/redis.conf
    
    echo "finding master..."
    MASTER_FDQN=`hostname  -f | sed -e 's/redis-[0-9]\./redis-0./'`
    if [ "$(redis-cli -h sentinel -p 5000 ping)" != "PONG" ]; then
      echo "master not found, defaulting to redis-0"

      if [ "$(hostname)" == "redis-0" ]; then
        echo "this is redis-0, not updating config..."
      else
        echo "updating redis.conf..."
        echo "slaveof $MASTER_FDQN 6379" >> /etc/redis/redis.conf
      fi
    else
      echo "sentinel found, finding master"
      MASTER="$(redis-cli -h sentinel -p 5000 sentinel get-master-addr-by-name redismaster | grep -E '(^redis-\d{1,})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})')"
      echo "master found : $MASTER, updating redis.conf"
      echo "slaveof $MASTER 6379" >> /etc/redis/redis.conf
    fi
    
    echo "redis.conf"
    cat /etc/redis/redis.conf
    exec "$@"
    
  redis.conf: |
    bind 0.0.0.0
    protected-mode no
    port 6379
    dbfilename "dump.rdb"
    dir "/data"
    appendonly yes
    appendfilename "appendonly.aof"
    
---    
apiVersion: v1
kind: ConfigMap
metadata:
  name: sentinel-config
data:
  startup.sh: |
    #!/bin/sh
    DEFAULT_NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
    nodes=redis-0.redis.$DEFAULT_NAMESPACE.svc.cluster.local,redis-1.redis.$DEFAULT_NAMESPACE.svc.cluster.local,redis-2.redis.$DEFAULT_NAMESPACE.svc.cluster.local

    for i in ${nodes//,/ }
    do
        echo "finding master at $i"
        MASTER=$(redis-cli --no-auth-warning --raw -h $i -a $REDIS_PASSWORD info replication | awk '{print $1}' | grep master_host: | cut -d ":" -f2)
        if [ "$MASTER" == "" ]; then
            echo "no master found"
            MASTER=
        else
            echo "found $MASTER"
            break
        fi
    done
    
    echo "sentinel monitor redismaster $MASTER 6379 2" >> /tmp/master
    echo "port 5000
    sentinel resolve-hostnames yes
    sentinel announce-hostnames yes
    $(cat /tmp/master)
    sentinel down-after-milliseconds redismaster 5000
    sentinel failover-timeout redismaster 30000
    sentinel parallel-syncs redismaster 1
    sentinel auth-pass redismaster $REDIS_PASSWORD
    " > /etc/redis/sentinel.conf
    
    echo "sentinel.conf"
    cat /etc/redis/sentinel.conf
    exec "$@"
